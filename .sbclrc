;; Allegro CL-style REPL, with integrated inspector
(require :sb-aclrepl)

;; Add maximum debug information
(sb-ext:restrict-compiler-policy 'debug 3)

;;________________________________________________________________________________
;;                                                                      Quicklisp

#-quicklisp
(let ((quicklisp-init (merge-pathnames "quicklisp/setup.lisp"
                                       (user-homedir-pathname))))
  (when (probe-file quicklisp-init)
    (load quicklisp-init)))

;; NOTE: Use ~/quicklisp/local-projects for projects

;;________________________________________________________________________________
;;                                                             SBCL Configuration

(handler-bind
    ((sb-ext:implicit-generic-function-warning #'muffle-warning)
     (sb-kernel:type-proclamation-mismatch-warning #'muffle-warning)
     (style-warning #'muffle-warning)
     (warning #'muffle-warning)))

(ql:quickload '(:quickproject :alexandria :iterate :lisp-critic))

(setf quickproject:*author* "Zlatozar Zhelyazkov <zlatozar@gmail.com>")

;; Static Code Analysis
(use-package :lisp-critic)

;; LOOP replacement
(use-package :iterate)

;; Set default opimzation levels for compiling:
(declaim (optimize (safety 3) (debug 3) (speed 0) (space 0)))

(format *debug-io* "To take latest type:
    (ql:update-dist \"quicklisp\")~%")
